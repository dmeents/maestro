ddfb3714f5749e7cef1df527ddff2e3c
"use strict";

/* istanbul ignore next */
function cov_wepzwvvcq() {
  var path = "C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\jest\\index.ts";
  var hash = "6632807f15592536d666771d570b86d7d9f65830";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\jest\\index.ts",
    statementMap: {
      "0": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 62
        }
      },
      "1": {
        start: {
          line: 3,
          column: 19
        },
        end: {
          line: 22,
          column: 1
        }
      },
      "2": {
        start: {
          line: 4,
          column: 19
        },
        end: {
          line: 12,
          column: 5
        }
      },
      "3": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "4": {
        start: {
          line: 14,
          column: 8
        },
        end: {
          line: 14,
          column: 81
        }
      },
      "5": {
        start: {
          line: 16,
          column: 4
        },
        end: {
          line: 20,
          column: 5
        }
      },
      "6": {
        start: {
          line: 17,
          column: 8
        },
        end: {
          line: 19,
          column: 10
        }
      },
      "7": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 18
        }
      },
      "8": {
        start: {
          line: 23,
          column: 25
        },
        end: {
          line: 32,
          column: 1
        }
      },
      "9": {
        start: {
          line: 24,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 8
        },
        end: {
          line: 29,
          column: 10
        }
      },
      "11": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 14
        }
      },
      "12": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 38,
          column: 1
        }
      },
      "13": {
        start: {
          line: 34,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "14": {
        start: {
          line: 35,
          column: 8
        },
        end: {
          line: 35,
          column: 61
        }
      },
      "15": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 14
        }
      },
      "16": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "17": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 41,
          column: 37
        }
      },
      "18": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 42,
          column: 195
        }
      },
      "19": {
        start: {
          line: 44,
          column: 0
        },
        end: {
          line: 44,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 3,
            column: 19
          },
          end: {
            line: 3,
            column: 20
          }
        },
        loc: {
          start: {
            line: 3,
            column: 57
          },
          end: {
            line: 22,
            column: 1
          }
        },
        line: 3
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 25
          },
          end: {
            line: 23,
            column: 26
          }
        },
        loc: {
          start: {
            line: 23,
            column: 53
          },
          end: {
            line: 32,
            column: 1
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 33,
            column: 19
          },
          end: {
            line: 33,
            column: 20
          }
        },
        loc: {
          start: {
            line: 33,
            column: 34
          },
          end: {
            line: 38,
            column: 1
          }
        },
        line: 33
      },
      "3": {
        name: "jest",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 13
          }
        },
        loc: {
          start: {
            line: 39,
            column: 77
          },
          end: {
            line: 43,
            column: 1
          }
        },
        line: 39
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 13,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 13
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 4
          },
          end: {
            line: 20,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "4": {
        loc: {
          start: {
            line: 39,
            column: 16
          },
          end: {
            line: 39,
            column: 30
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 39,
            column: 25
          },
          end: {
            line: 39,
            column: 30
          }
        }],
        line: 39
      },
      "5": {
        loc: {
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 41,
            column: 37
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 40,
            column: 4
          },
          end: {
            line: 41,
            column: 37
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 40
      },
      "6": {
        loc: {
          start: {
            line: 42,
            column: 166
          },
          end: {
            line: 42,
            column: 191
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 42,
            column: 175
          },
          end: {
            line: 42,
            column: 181
          }
        }, {
          start: {
            line: 42,
            column: 184
          },
          end: {
            line: 42,
            column: 191
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0],
      "5": [0, 0],
      "6": [0, 0]
    },
    inputSourceMap: {
      file: "C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\jest\\index.ts",
      mappings: ";;AAAA,MAAM,UAAU,GAAG,CACjB,WAAmB,EACnB,SAAkB,EAClB,QAAiB,EACjB,EAAE;IACF,MAAM,MAAM,GAAQ;QAClB,cAAc,EAAE,aAAa;QAC7B,EAAE,EAAE,WAAW;QACf,WAAW,EAAE,WAAW;QACxB,SAAS,EAAE,CAAC,SAAS,EAAE,YAAY,CAAC;QACpC,uBAAuB,EAAE,CAAC,cAAc,EAAE,OAAO,EAAE,eAAe,CAAC;QACnE,mBAAmB,EAAE,CAAC,6BAA6B,CAAC;QACpD,iBAAiB,EAAE,qBAAqB;KACzC,CAAC;IAEF,IAAI,SAAS,EAAE;QACb,MAAM,CAAC,iBAAiB,GAAG,EAAE,CAAC,KAAK,SAAS,QAAQ,CAAC,EAAE,eAAe,EAAE,CAAC;KAC1E;IAED,IAAI,QAAQ,EAAE;QACZ,MAAM,CAAC,SAAS,GAAG;YACjB,UAAU,EAAE,CAAC,SAAS,EAAE,EAAE,QAAQ,EAAE,CAAC;SACtC,CAAC;KACH;IAED,OAAO,MAAM,CAAC;AAChB,CAAC,CAAC;AAEF,MAAM,gBAAgB,GAAG,CAAC,WAAmB,EAAE,SAAkB,EAAE,EAAE;IACnE,IAAI,SAAS,EAAE;QACb,OAAO;YACL,OAAO,EAAE,QAAQ;YACjB,KAAK,EAAE,CAAC,cAAc,WAAW,EAAE,CAAC;YACpC,SAAS,EAAE,cAAc,WAAW,oBAAoB;SACzD,CAAC;KACH;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAEF,MAAM,UAAU,GAAG,CAAC,SAAkB,EAAE,EAAE;IACxC,IAAI,SAAS,EAAE;QACb,OAAO,EAAE,QAAQ,EAAE,CAAC,6BAA6B,CAAC,EAAE,CAAC;KACtD;IAED,OAAO,EAAE,CAAC;AACZ,CAAC,CAAC;AAeF,SAAwB,IAAI,CAAC,EAC3B,MAAM,GAAG,KAAK,EACd,WAAW,EACX,SAAS,EACT,QAAQ,EACR,MAAM,GACK;IACX,IAAI,MAAM;QAAE,OAAO,UAAU,CAAC,SAAS,CAAC,CAAC;IAEzC,qDACK,UAAU,CAAC,WAAW,EAAE,SAAS,EAAE,QAAQ,CAAC,GAC5C,gBAAgB,CAAC,WAAW,EAAE,SAAS,CAAC,KAC3C,eAAe,EAAE,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,OAAO,IAC1C;AACJ,CAAC;AAdD,uBAcC",
      names: [],
      sources: ["C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\jest\\index.ts"],
      sourcesContent: ["const baseConfig = (\n  packageName: string,\n  namespace?: string,\n  tsconfig?: string,\n) => {\n  const config: any = {\n    cacheDirectory: '.jest-cache',\n    id: packageName,\n    displayName: packageName,\n    reporters: ['default', 'jest-junit'],\n    transformIgnorePatterns: ['node_modules', '.dist', 'setupTests.js'],\n    collectCoverageFrom: ['<rootDir>/src/**/*.{ts,tsx}'],\n    coverageDirectory: '<rootDir>/coverage/',\n  };\n\n  if (namespace) {\n    config.moduleNameWrapper = { [`^@${namespace}/(.*)$`]: './packages/$1' };\n  }\n\n  if (tsconfig) {\n    config.transform = {\n      '\\\\.tsx?$': ['ts-jest', { tsconfig }],\n    };\n  }\n\n  return config;\n};\n\nconst directoryConfigs = (packageName: string, namespace?: string) => {\n  if (namespace) {\n    return {\n      rootDir: '../../',\n      roots: [`./packages/${packageName}`],\n      testRegex: `./packages/${packageName}/*.{tsx,ts,js,jsx}`,\n    };\n  }\n\n  return {};\n};\n\nconst rootConfig = (namespace?: string) => {\n  if (namespace) {\n    return { projects: ['./packages/*/jest.config.js'] };\n  }\n\n  return {};\n};\n\ninterface JestConfig {\n  // the name of the package to test\n  packageName: string;\n  // is this the root config (in a monorepo)\n  isRoot?: boolean;\n  // should this run in an node or jsdom environment\n  isNode?: boolean;\n  // the namespace of the monorepo (determines if this config is for monorepos)\n  namespace?: string;\n  // the path to the tsconfig (only for typescript)\n  tsconfig?: string;\n}\n\nexport default function jest({\n  isRoot = false,\n  packageName,\n  namespace,\n  tsconfig,\n  isNode,\n}: JestConfig) {\n  if (isRoot) return rootConfig(namespace);\n\n  return {\n    ...baseConfig(packageName, namespace, tsconfig),\n    ...directoryConfigs(packageName, namespace),\n    testEnvironment: isNode ? 'node' : 'jsdom',\n  };\n}\n"],
      version: 3
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6632807f15592536d666771d570b86d7d9f65830"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }

  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_wepzwvvcq = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}

cov_wepzwvvcq();
cov_wepzwvvcq().s[0]++;
Object.defineProperty(exports, "__esModule", {
  value: true
});

/* istanbul ignore next */
cov_wepzwvvcq().s[1]++;

const baseConfig = (packageName, namespace, tsconfig) => {
  /* istanbul ignore next */
  cov_wepzwvvcq().f[0]++;
  const config =
  /* istanbul ignore next */
  (cov_wepzwvvcq().s[2]++, {
    cacheDirectory: '.jest-cache',
    id: packageName,
    displayName: packageName,
    reporters: ['default', 'jest-junit'],
    transformIgnorePatterns: ['node_modules', '.dist', 'setupTests.js'],
    collectCoverageFrom: ['<rootDir>/src/**/*.{ts,tsx}'],
    coverageDirectory: '<rootDir>/coverage/'
  });

  /* istanbul ignore next */
  cov_wepzwvvcq().s[3]++;

  if (namespace) {
    /* istanbul ignore next */
    cov_wepzwvvcq().b[0][0]++;
    cov_wepzwvvcq().s[4]++;
    config.moduleNameWrapper = {
      [`^@${namespace}/(.*)$`]: './packages/$1'
    };
  } else
  /* istanbul ignore next */
  {
    cov_wepzwvvcq().b[0][1]++;
  }

  cov_wepzwvvcq().s[5]++;

  if (tsconfig) {
    /* istanbul ignore next */
    cov_wepzwvvcq().b[1][0]++;
    cov_wepzwvvcq().s[6]++;
    config.transform = {
      '\\.tsx?$': ['ts-jest', {
        tsconfig
      }]
    };
  } else
  /* istanbul ignore next */
  {
    cov_wepzwvvcq().b[1][1]++;
  }

  cov_wepzwvvcq().s[7]++;
  return config;
};

/* istanbul ignore next */
cov_wepzwvvcq().s[8]++;

const directoryConfigs = (packageName, namespace) => {
  /* istanbul ignore next */
  cov_wepzwvvcq().f[1]++;
  cov_wepzwvvcq().s[9]++;

  if (namespace) {
    /* istanbul ignore next */
    cov_wepzwvvcq().b[2][0]++;
    cov_wepzwvvcq().s[10]++;
    return {
      rootDir: '../../',
      roots: [`./packages/${packageName}`],
      testRegex: `./packages/${packageName}/*.{tsx,ts,js,jsx}`
    };
  } else
  /* istanbul ignore next */
  {
    cov_wepzwvvcq().b[2][1]++;
  }

  cov_wepzwvvcq().s[11]++;
  return {};
};

/* istanbul ignore next */
cov_wepzwvvcq().s[12]++;

const rootConfig = (namespace) => {
  /* istanbul ignore next */
  cov_wepzwvvcq().f[2]++;
  cov_wepzwvvcq().s[13]++;

  if (namespace) {
    /* istanbul ignore next */
    cov_wepzwvvcq().b[3][0]++;
    cov_wepzwvvcq().s[14]++;
    return {
      projects: ['./packages/*/jest.config.js']
    };
  } else
  /* istanbul ignore next */
  {
    cov_wepzwvvcq().b[3][1]++;
  }

  cov_wepzwvvcq().s[15]++;
  return {};
};

function jest({
  isRoot =
  /* istanbul ignore next */
  (cov_wepzwvvcq().b[4][0]++, false),
  packageName,
  namespace,
  tsconfig,
  isNode
}) {
  /* istanbul ignore next */
  cov_wepzwvvcq().f[3]++;
  cov_wepzwvvcq().s[16]++;

  if (isRoot) {
    /* istanbul ignore next */
    cov_wepzwvvcq().b[5][0]++;
    cov_wepzwvvcq().s[17]++;
    return rootConfig(namespace);
  } else
  /* istanbul ignore next */
  {
    cov_wepzwvvcq().b[5][1]++;
  }

  cov_wepzwvvcq().s[18]++;
  return Object.assign(Object.assign(Object.assign({}, baseConfig(packageName, namespace, tsconfig)), directoryConfigs(packageName, namespace)), {
    testEnvironment: isNode ?
    /* istanbul ignore next */
    (cov_wepzwvvcq().b[6][0]++, 'node') :
    /* istanbul ignore next */
    (cov_wepzwvvcq().b[6][1]++, 'jsdom')
  });
}

/* istanbul ignore next */
cov_wepzwvvcq().s[19]++;
exports.default = jest;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFtQk07Ozs7Ozs7Ozs7Ozs7Ozs7O0FBbkJOLE1BQU1BLFVBQVUsR0FBRyxDQUNqQkMsV0FEaUIsRUFFakJDLFNBRmlCLEVBR2pCQyxRQUhpQixLQUlmO0VBQUE7RUFBQTtFQUNGLE1BQU1DLE1BQU07RUFBQTtFQUFBLHlCQUFRO0lBQ2xCQyxjQUFjLEVBQUUsYUFERTtJQUVsQkMsRUFBRSxFQUFFTCxXQUZjO0lBR2xCTSxXQUFXLEVBQUVOLFdBSEs7SUFJbEJPLFNBQVMsRUFBRSxDQUFDLFNBQUQsRUFBWSxZQUFaLENBSk87SUFLbEJDLHVCQUF1QixFQUFFLENBQUMsY0FBRCxFQUFpQixPQUFqQixFQUEwQixlQUExQixDQUxQO0lBTWxCQyxtQkFBbUIsRUFBRSxDQUFDLDZCQUFELENBTkg7SUFPbEJDLGlCQUFpQixFQUFFO0VBUEQsQ0FBUixDQUFaOztFQURFO0VBQUE7O0VBV0YsSUFBSVQsU0FBSixFQUFlO0lBQUE7SUFBQTtJQUFBO0lBQ2JFLE1BQU0sQ0FBQ1EsaUJBQVAsR0FBMkI7TUFBRSxDQUFDLEtBQUtWLFNBQVMsUUFBZixHQUEwQjtJQUE1QixDQUEzQjtFQUNELENBRkQ7RUFBQTtFQUFBO0lBQUE7RUFBQTs7RUFYRTs7RUFlRixJQUFJQyxRQUFKLEVBQWM7SUFBQTtJQUFBO0lBQUE7SUFDWkMsTUFBTSxDQUFDUyxTQUFQLEdBQW1CO01BQ2pCLFlBQVksQ0FBQyxTQUFELEVBQVk7UUFBRVY7TUFBRixDQUFaO0lBREssQ0FBbkI7RUFHRCxDQUpEO0VBQUE7RUFBQTtJQUFBO0VBQUE7O0VBZkU7RUFxQkYsT0FBT0MsTUFBUDtBQUNELENBMUJEOzs7OztBQTRCQSxNQUFNVSxnQkFBZ0IsR0FBRyxDQUFDYixXQUFELEVBQXNCQyxTQUF0QixLQUE0QztFQUFBO0VBQUE7RUFBQTs7RUFDbkUsSUFBSUEsU0FBSixFQUFlO0lBQUE7SUFBQTtJQUFBO0lBQ2IsT0FBTztNQUNMYSxPQUFPLEVBQUUsUUFESjtNQUVMQyxLQUFLLEVBQUUsQ0FBQyxjQUFjZixXQUFXLEVBQTFCLENBRkY7TUFHTGdCLFNBQVMsRUFBRSxjQUFjaEIsV0FBVztJQUgvQixDQUFQO0VBS0QsQ0FORDtFQUFBO0VBQUE7SUFBQTtFQUFBOztFQURtRTtFQVNuRSxPQUFPLEVBQVA7QUFDRCxDQVZEOzs7OztBQVlBLE1BQU1pQixVQUFVLEdBQUcsQ0FBQ2hCLFNBQUQsS0FBdUI7RUFBQTtFQUFBO0VBQUE7O0VBQ3hDLElBQUlBLFNBQUosRUFBZTtJQUFBO0lBQUE7SUFBQTtJQUNiLE9BQU87TUFBRWlCLFFBQVEsRUFBRSxDQUFDLDZCQUFEO0lBQVosQ0FBUDtFQUNELENBRkQ7RUFBQTtFQUFBO0lBQUE7RUFBQTs7RUFEd0M7RUFLeEMsT0FBTyxFQUFQO0FBQ0QsQ0FORDs7QUFxQkEsU0FBd0JDLElBQXhCLENBQTZCO0VBQzNCQyxNQUFNO0VBQUE7RUFBQSw0QkFBRyxLQUFILENBRHFCO0VBRTNCcEIsV0FGMkI7RUFHM0JDLFNBSDJCO0VBSTNCQyxRQUoyQjtFQUszQm1CO0FBTDJCLENBQTdCLEVBTWE7RUFBQTtFQUFBO0VBQUE7O0VBQ1gsSUFBSUQsTUFBSixFQUFZO0lBQUE7SUFBQTtJQUFBO0lBQUEsT0FBT0gsVUFBVSxDQUFDaEIsU0FBRCxDQUFqQjtFQUE2QixDQUF6QztFQUFBO0VBQUE7SUFBQTtFQUFBOztFQURXO0VBR1gscURBQ0tGLFVBQVUsQ0FBQ0MsV0FBRCxFQUFjQyxTQUFkLEVBQXlCQyxRQUF6QixDQURmLEdBRUtXLGdCQUFnQixDQUFDYixXQUFELEVBQWNDLFNBQWQsQ0FGckIsR0FFNkM7SUFDM0NxQixlQUFlLEVBQUVELE1BQU07SUFBQTtJQUFBLDRCQUFHLE1BQUg7SUFBQTtJQUFBLDRCQUFZLE9BQVo7RUFEb0IsQ0FGN0M7QUFLRDs7OztBQWRERSIsIm5hbWVzIjpbImJhc2VDb25maWciLCJwYWNrYWdlTmFtZSIsIm5hbWVzcGFjZSIsInRzY29uZmlnIiwiY29uZmlnIiwiY2FjaGVEaXJlY3RvcnkiLCJpZCIsImRpc3BsYXlOYW1lIiwicmVwb3J0ZXJzIiwidHJhbnNmb3JtSWdub3JlUGF0dGVybnMiLCJjb2xsZWN0Q292ZXJhZ2VGcm9tIiwiY292ZXJhZ2VEaXJlY3RvcnkiLCJtb2R1bGVOYW1lV3JhcHBlciIsInRyYW5zZm9ybSIsImRpcmVjdG9yeUNvbmZpZ3MiLCJyb290RGlyIiwicm9vdHMiLCJ0ZXN0UmVnZXgiLCJyb290Q29uZmlnIiwicHJvamVjdHMiLCJqZXN0IiwiaXNSb290IiwiaXNOb2RlIiwidGVzdEVudmlyb25tZW50IiwiZXhwb3J0cyJdLCJzb3VyY2VzIjpbIkM6XFxVc2Vyc1xcZG1lZW5cXERvY3VtZW50c1xcR2l0SHViXFxtYWVzdHJvXFxzcmNcXGplc3RcXGluZGV4LnRzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGJhc2VDb25maWcgPSAoXG4gIHBhY2thZ2VOYW1lOiBzdHJpbmcsXG4gIG5hbWVzcGFjZT86IHN0cmluZyxcbiAgdHNjb25maWc/OiBzdHJpbmcsXG4pID0+IHtcbiAgY29uc3QgY29uZmlnOiBhbnkgPSB7XG4gICAgY2FjaGVEaXJlY3Rvcnk6ICcuamVzdC1jYWNoZScsXG4gICAgaWQ6IHBhY2thZ2VOYW1lLFxuICAgIGRpc3BsYXlOYW1lOiBwYWNrYWdlTmFtZSxcbiAgICByZXBvcnRlcnM6IFsnZGVmYXVsdCcsICdqZXN0LWp1bml0J10sXG4gICAgdHJhbnNmb3JtSWdub3JlUGF0dGVybnM6IFsnbm9kZV9tb2R1bGVzJywgJy5kaXN0JywgJ3NldHVwVGVzdHMuanMnXSxcbiAgICBjb2xsZWN0Q292ZXJhZ2VGcm9tOiBbJzxyb290RGlyPi9zcmMvKiovKi57dHMsdHN4fSddLFxuICAgIGNvdmVyYWdlRGlyZWN0b3J5OiAnPHJvb3REaXI+L2NvdmVyYWdlLycsXG4gIH07XG5cbiAgaWYgKG5hbWVzcGFjZSkge1xuICAgIGNvbmZpZy5tb2R1bGVOYW1lV3JhcHBlciA9IHsgW2BeQCR7bmFtZXNwYWNlfS8oLiopJGBdOiAnLi9wYWNrYWdlcy8kMScgfTtcbiAgfVxuXG4gIGlmICh0c2NvbmZpZykge1xuICAgIGNvbmZpZy50cmFuc2Zvcm0gPSB7XG4gICAgICAnXFxcXC50c3g/JCc6IFsndHMtamVzdCcsIHsgdHNjb25maWcgfV0sXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiBjb25maWc7XG59O1xuXG5jb25zdCBkaXJlY3RvcnlDb25maWdzID0gKHBhY2thZ2VOYW1lOiBzdHJpbmcsIG5hbWVzcGFjZT86IHN0cmluZykgPT4ge1xuICBpZiAobmFtZXNwYWNlKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHJvb3REaXI6ICcuLi8uLi8nLFxuICAgICAgcm9vdHM6IFtgLi9wYWNrYWdlcy8ke3BhY2thZ2VOYW1lfWBdLFxuICAgICAgdGVzdFJlZ2V4OiBgLi9wYWNrYWdlcy8ke3BhY2thZ2VOYW1lfS8qLnt0c3gsdHMsanMsanN4fWAsXG4gICAgfTtcbiAgfVxuXG4gIHJldHVybiB7fTtcbn07XG5cbmNvbnN0IHJvb3RDb25maWcgPSAobmFtZXNwYWNlPzogc3RyaW5nKSA9PiB7XG4gIGlmIChuYW1lc3BhY2UpIHtcbiAgICByZXR1cm4geyBwcm9qZWN0czogWycuL3BhY2thZ2VzLyovamVzdC5jb25maWcuanMnXSB9O1xuICB9XG5cbiAgcmV0dXJuIHt9O1xufTtcblxuaW50ZXJmYWNlIEplc3RDb25maWcge1xuICAvLyB0aGUgbmFtZSBvZiB0aGUgcGFja2FnZSB0byB0ZXN0XG4gIHBhY2thZ2VOYW1lOiBzdHJpbmc7XG4gIC8vIGlzIHRoaXMgdGhlIHJvb3QgY29uZmlnIChpbiBhIG1vbm9yZXBvKVxuICBpc1Jvb3Q/OiBib29sZWFuO1xuICAvLyBzaG91bGQgdGhpcyBydW4gaW4gYW4gbm9kZSBvciBqc2RvbSBlbnZpcm9ubWVudFxuICBpc05vZGU/OiBib29sZWFuO1xuICAvLyB0aGUgbmFtZXNwYWNlIG9mIHRoZSBtb25vcmVwbyAoZGV0ZXJtaW5lcyBpZiB0aGlzIGNvbmZpZyBpcyBmb3IgbW9ub3JlcG9zKVxuICBuYW1lc3BhY2U/OiBzdHJpbmc7XG4gIC8vIHRoZSBwYXRoIHRvIHRoZSB0c2NvbmZpZyAob25seSBmb3IgdHlwZXNjcmlwdClcbiAgdHNjb25maWc/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGplc3Qoe1xuICBpc1Jvb3QgPSBmYWxzZSxcbiAgcGFja2FnZU5hbWUsXG4gIG5hbWVzcGFjZSxcbiAgdHNjb25maWcsXG4gIGlzTm9kZSxcbn06IEplc3RDb25maWcpIHtcbiAgaWYgKGlzUm9vdCkgcmV0dXJuIHJvb3RDb25maWcobmFtZXNwYWNlKTtcblxuICByZXR1cm4ge1xuICAgIC4uLmJhc2VDb25maWcocGFja2FnZU5hbWUsIG5hbWVzcGFjZSwgdHNjb25maWcpLFxuICAgIC4uLmRpcmVjdG9yeUNvbmZpZ3MocGFja2FnZU5hbWUsIG5hbWVzcGFjZSksXG4gICAgdGVzdEVudmlyb25tZW50OiBpc05vZGUgPyAnbm9kZScgOiAnanNkb20nLFxuICB9O1xufVxuIl19