{"version":3,"mappingsmBM;;;;;;;;;;;;;;;;;AAnBN,MAAMA,UAAU,GAAG,CACjBC,WADiB,EAEjBC,SAFiB,EAGjBC,QAHiB,KAIf;EAAA;EAAA;EACF,MAAMC,MAAM;EAAA;EAAA,yBAAQ;IAClBC,cAAc,EAAE,aADE;IAElBC,EAAE,EAAEL,WAFc;IAGlBM,WAAW,EAAEN,WAHK;IAIlBO,SAAS,EAAE,CAAC,SAAD,EAAY,YAAZ,CAJO;IAKlBC,uBAAuB,EAAE,CAAC,cAAD,EAAiB,OAAjB,EAA0B,eAA1B,CALP;IAMlBC,mBAAmB,EAAE,CAAC,6BAAD,CANH;IAOlBC,iBAAiB,EAAE;EAPD,CAAR,CAAZ;;EADE;EAAA;;EAWF,IAAIT,SAAJ,EAAe;IAAA;IAAA;IAAA;IACbE,MAAM,CAACQ,iBAAP,GAA2B;MAAE,CAAC,KAAKV,SAAS,QAAf,GAA0B;IAA5B,CAA3B;EACD,CAFD;EAAA;EAAA;IAAA;EAAA;;EAXE;;EAeF,IAAIC,QAAJ,EAAc;IAAA;IAAA;IAAA;IACZC,MAAM,CAACS,SAAP,GAAmB;MACjB,YAAY,CAAC,SAAD,EAAY;QAAEV;MAAF,CAAZ;IADK,CAAnB;EAGD,CAJD;EAAA;EAAA;IAAA;EAAA;;EAfE;EAqBF,OAAOC,MAAP;AACD,CA1BD;;;;;AA4BA,MAAMU,gBAAgB,GAAG,CAACb,WAAD,EAAsBC,SAAtB,KAA4C;EAAA;EAAA;EAAA;;EACnE,IAAIA,SAAJ,EAAe;IAAA;IAAA;IAAA;IACb,OAAO;MACLa,OAAO,EAAE,QADJ;MAELC,KAAK,EAAE,CAAC,cAAcf,WAAW,EAA1B,CAFF;MAGLgB,SAAS,EAAE,cAAchB,WAAW;IAH/B,CAAP;EAKD,CAND;EAAA;EAAA;IAAA;EAAA;;EADmE;EASnE,OAAO,EAAP;AACD,CAVD;;;;;AAYA,MAAMiB,UAAU,GAAG,CAAChB,SAAD,KAAuB;EAAA;EAAA;EAAA;;EACxC,IAAIA,SAAJ,EAAe;IAAA;IAAA;IAAA;IACb,OAAO;MAAEiB,QAAQ,EAAE,CAAC,6BAAD;IAAZ,CAAP;EACD,CAFD;EAAA;EAAA;IAAA;EAAA;;EADwC;EAKxC,OAAO,EAAP;AACD,CAND;;AAqBA,SAAwBC,IAAxB,CAA6B;EAC3BC,MAAM;EAAA;EAAA,4BAAG,KAAH,CADqB;EAE3BpB,WAF2B;EAG3BC,SAH2B;EAI3BC,QAJ2B;EAK3BmB;AAL2B,CAA7B,EAMa;EAAA;EAAA;EAAA;;EACX,IAAID,MAAJ,EAAY;IAAA;IAAA;IAAA;IAAA,OAAOH,UAAU,CAAChB,SAAD,CAAjB;EAA6B,CAAzC;EAAA;EAAA;IAAA;EAAA;;EADW;EAGX,qDACKF,UAAU,CAACC,WAAD,EAAcC,SAAd,EAAyBC,QAAzB,CADf,GAEKW,gBAAgB,CAACb,WAAD,EAAcC,SAAd,CAFrB,GAE6C;IAC3CqB,eAAe,EAAED,MAAM;IAAA;IAAA,4BAAG,MAAH;IAAA;IAAA,4BAAY,OAAZ;EADoB,CAF7C;AAKD;;;;AAdDE","names":["baseConfig","packageName","namespace","tsconfig","config","cacheDirectory","id","displayName","reporters","transformIgnorePatterns","collectCoverageFrom","coverageDirectory","moduleNameWrapper","transform","directoryConfigs","rootDir","roots","testRegex","rootConfig","projects","jest","isRoot","isNode","testEnvironment","exports"],"sources":["C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\jest\\index.ts"],"sourcesContent":["const baseConfig = (\n  packageName: string,\n  namespace?: string,\n  tsconfig?: string,\n) => {\n  const config: any = {\n    cacheDirectory: '.jest-cache',\n    id: packageName,\n    displayName: packageName,\n    reporters: ['default', 'jest-junit'],\n    transformIgnorePatterns: ['node_modules', '.dist', 'setupTests.js'],\n    collectCoverageFrom: ['<rootDir>/src/**/*.{ts,tsx}'],\n    coverageDirectory: '<rootDir>/coverage/',\n  };\n\n  if (namespace) {\n    config.moduleNameWrapper = { [`^@${namespace}/(.*)$`]: './packages/$1' };\n  }\n\n  if (tsconfig) {\n    config.transform = {\n      '\\\\.tsx?$': ['ts-jest', { tsconfig }],\n    };\n  }\n\n  return config;\n};\n\nconst directoryConfigs = (packageName: string, namespace?: string) => {\n  if (namespace) {\n    return {\n      rootDir: '../../',\n      roots: [`./packages/${packageName}`],\n      testRegex: `./packages/${packageName}/*.{tsx,ts,js,jsx}`,\n    };\n  }\n\n  return {};\n};\n\nconst rootConfig = (namespace?: string) => {\n  if (namespace) {\n    return { projects: ['./packages/*/jest.config.js'] };\n  }\n\n  return {};\n};\n\ninterface JestConfig {\n  // the name of the package to test\n  packageName: string;\n  // is this the root config (in a monorepo)\n  isRoot?: boolean;\n  // should this run in an node or jsdom environment\n  isNode?: boolean;\n  // the namespace of the monorepo (determines if this config is for monorepos)\n  namespace?: string;\n  // the path to the tsconfig (only for typescript)\n  tsconfig?: string;\n}\n\nexport default function jest({\n  isRoot = false,\n  packageName,\n  namespace,\n  tsconfig,\n  isNode,\n}: JestConfig) {\n  if (isRoot) return rootConfig(namespace);\n\n  return {\n    ...baseConfig(packageName, namespace, tsconfig),\n    ...directoryConfigs(packageName, namespace),\n    testEnvironment: isNode ? 'node' : 'jsdom',\n  };\n}\n"]}