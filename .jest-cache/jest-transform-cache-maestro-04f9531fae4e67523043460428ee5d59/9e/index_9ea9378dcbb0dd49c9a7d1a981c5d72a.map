{"version":3,"mappingscAAX,EAA2B,UAA3B,CADE;EAEXC,OAAO,EAAE,CAAC,OAAD,EAAU,UAAV,CAFE;EAGXC,KAAK,EAAE;IACL,gCAAgC,CAD3B;IAEL,eAAe,CAFV;IAGL,wBAAwB,CAHnB;IAIL,oBAAoB;EAJf;AAHI,CAAH,CAAV;AAWA,MAAMC,UAAU;AAAA;AAAA,2BAAG;EACjBH,OAAO,EAAE,CAAC,mBAAD,CADQ;EAEjBC,OAAO,EAAE,CAAC,oBAAD,CAFQ;EAGjBG,MAAM,EAAE,2BAHS;EAIjBC,aAAa,EAAE;IACbC,OAAO,EAAE,iBADI;IAEbC,oBAAoB,EAAE;EAFT,CAJE;EAQjBC,GAAG,EAAE;IACHC,IAAI,EAAE,IADH;IAEHC,IAAI,EAAE;EAFH,CARY;EAYjBR,KAAK,EAAE;AAZU,CAAH,CAAhB;;AAmBA,SAAwBS,MAAxB,CAA+B;EAAEC,YAAY;EAAA;EAAA,6BAAG,KAAH;AAAd,CAA/B,EAA+D;EAAA;EAAA;EAC7D,MAAMC,UAAU;EAAA;EAAA,6CAAQd,IAAR,EAAhB;;EAD6D;EAAA;;EAG7D,IAAI,CAACa,YAAL,EAAmB;IAAA;IAAA;IAAA;IAAA,OAAOC,UAAP;EAAkB,CAArC;EAAA;EAAA;IAAA;EAAA;;EAEA,MAAM;IACJb,OAAO,EAAEc,SADL;IAEJZ,KAAK,EAAEa,OAFH;IAGJd,OAAO,EAAEe;EAHL;EAAA;EAAA,2BAKFb,UALE,CAAN;EAAA,MAIKc,KAAK;EAAA;EAAA,kCACNd,UADM,EAJJ,+BAII,EAJV;;EAL6D;EAAA;EAY7D,uCACKc,KADL,GACU;IACRjB,OAAO,EAAE,CAAC,GAAGa,UAAU,CAACb,OAAf,EAAwB,GAAGc,SAA3B,CADD;IAERb,OAAO,EAAE,CAAC,GAAGY,UAAU,CAACZ,OAAf,EAAwB,GAAGe,SAA3B,CAFD;IAGRd,KAAK,kCAAOW,UAAU,CAACX,KAAlB,GAA4Ba,OAA5B;EAHG,CADV;AAMD;;;;AAlBDG","names":["base","extends","plugins","rules","typescript","parser","parserOptions","project","createDefaultProgram","env","node","jest","eslint","isTypescript","baseConfig","tsExtends","tsRules","tsPlugins","other","exports"],"sources":["C:\\Users\\dmeen\\Documents\\GitHub\\maestro\\src\\eslint\\index.ts"],"sourcesContent":["const base = {\n  extends: ['airbnb', 'airbnb/hooks', 'prettier'],\n  plugins: ['react', 'prettier'],\n  rules: {\n    'import/prefer-default-export': 0,\n    'no-plusplus': 0,\n    'no-restricted-syntax': 0,\n    'no-await-in-loop': 0,\n  },\n};\n\nconst typescript = {\n  extends: ['airbnb-typescript'],\n  plugins: ['@typescript-eslint'],\n  parser: '@typescript-eslint/parser',\n  parserOptions: {\n    project: './tsconfig.json',\n    createDefaultProgram: true,\n  },\n  env: {\n    node: true,\n    jest: true,\n  },\n  rules: {},\n};\n\ninterface Config {\n  isTypescript?: boolean;\n}\n\nexport default function eslint({ isTypescript = false }: Config) {\n  const baseConfig = { ...base };\n\n  if (!isTypescript) return baseConfig;\n\n  const {\n    extends: tsExtends,\n    rules: tsRules,\n    plugins: tsPlugins,\n    ...other\n  } = typescript;\n\n  return {\n    ...other,\n    extends: [...baseConfig.extends, ...tsExtends],\n    plugins: [...baseConfig.plugins, ...tsPlugins],\n    rules: { ...baseConfig.rules, ...tsRules },\n  };\n}\n"]}